{"ast":null,"code":"var _jsxFileName = \"/home/w3villa/Desktop/node/task-ui/src/component/UpcomingTask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Dropdown, Collapse, initMDB } from \"mdb-ui-kit\";\nimport UpcomingTaskData from './UpcomingTaskData';\nimport AuthContext from '../context/AuthProvider';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PENDING_TASK = \"/task/pending\";\nconst UpcomingTask = () => {\n  _s();\n  const {\n    auth,\n    isLogin\n  } = useContext(AuthContext);\n  const [allPendingTaskData, setAllPendigTaskData] = useState([]);\n  const [errMsg, setErrMsg] = useState('');\n  console.log(\"Hello ...1\");\n  useEffect(() => {\n    async function getPendingData() {\n      try {\n        var _response$data;\n        initMDB({\n          Dropdown,\n          Collapse\n        });\n        const response = await axios.get(PENDING_TASK, {\n          headers: {\n            Authorization: auth.accessToken\n          }\n        });\n\n        // Set the response data in state\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.pendingTask.length) {\n          var _response$data2;\n          setAllPendigTaskData((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.pendingTask);\n        } else {\n          setErrMsg(\"You have no any upcoming task yet...\");\n        }\n      } catch (err) {\n        var _err$response, _err$response2, _err$response3;\n        if (!(err !== null && err !== void 0 && err.response)) {\n          setErrMsg('No server response');\n        } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n          setErrMsg('You have no any upcoming task yet...');\n        } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n          setErrMsg('Unautherized');\n        } else if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n          setErrMsg('User is not logged In');\n        } else {\n          setErrMsg('Login failed');\n        }\n\n        // errRef.current.focus();\n      }\n    }\n    getPendingData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header upcoming\",\n        children: \"Upcoming Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-wrapper\",\n        children: allPendingTaskData.length > 0 ? allPendingTaskData.map(item => {\n          var _props;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"task-item\",\n              name: \"task\",\n              type: \"checkbox\",\n              id: item === null || item === void 0 ? void 0 : item._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: (_props = props) === null || _props === void 0 ? void 0 : _props.taskId,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label-text \",\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: item.status ? \"tag completed\" : \"tag pending\",\n              children: item.status ? \"pending\" : \"pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(UpcomingTask, \"4rE2yTgHoleQvcrC14zcgucKVc0=\");\n_c = UpcomingTask;\nexport default UpcomingTask;\nvar _c;\n$RefreshReg$(_c, \"UpcomingTask\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Dropdown","Collapse","initMDB","UpcomingTaskData","AuthContext","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PENDING_TASK","UpcomingTask","_s","auth","isLogin","allPendingTaskData","setAllPendigTaskData","errMsg","setErrMsg","console","log","getPendingData","_response$data","response","get","headers","Authorization","accessToken","data","pendingTask","length","_response$data2","err","_err$response","_err$response2","_err$response3","status","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_props","name","type","id","_id","htmlFor","props","taskId","description","_c","$RefreshReg$"],"sources":["/home/w3villa/Desktop/node/task-ui/src/component/UpcomingTask.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { Dropdown, Collapse, initMDB } from \"mdb-ui-kit\";\nimport UpcomingTaskData from './UpcomingTaskData';\nimport AuthContext from '../context/AuthProvider';\nimport axios from '../api/axios';\n\n\nconst PENDING_TASK = \"/task/pending\"\n\nconst UpcomingTask = () => {\n    const { auth, isLogin } = useContext(AuthContext);\n    const [allPendingTaskData, setAllPendigTaskData] = useState([]);\n    const [errMsg, setErrMsg] = useState('');\n\n    console.log(\"Hello ...1\");\n\n\n    useEffect(() => {\n        async function getPendingData() {\n            try {\n                initMDB({ Dropdown, Collapse });\n\n                const response = await axios.get(PENDING_TASK, {\n                    headers: { Authorization: auth.accessToken }\n                });\n\n                // Set the response data in state\n                if (response.data?.pendingTask.length) {\n                    setAllPendigTaskData(response.data?.pendingTask);\n                }\n                else {\n                    setErrMsg(\"You have no any upcoming task yet...\");\n                }\n            } catch (err) {\n                if (!err?.response) {\n                    setErrMsg('No server response');\n                }\n                else if (err.response?.status === 400) {\n                    setErrMsg('You have no any upcoming task yet...');\n                } else if (err.response?.status === 401) {\n                    setErrMsg('Unautherized');\n                }\n                else if (err.response?.status === 403) {\n                    setErrMsg('User is not logged In');\n                }\n                else {\n                    setErrMsg('Login failed');\n                }\n\n                // errRef.current.focus();\n            }\n        }\n\n\n        getPendingData();\n\n    }, [])\n\n    return (\n        <>\n            <div className=\"page-content\">\n                <div className=\"header upcoming\">Upcoming Tasks</div>\n                <div className=\"tasks-wrapper\">\n                    {allPendingTaskData.length > 0 ?\n                        allPendingTaskData.map((item) => (\n                            <div className=\"task\">\n                                <input className=\"task-item\" name=\"task\" type=\"checkbox\" id={item?._id} />\n                                <label htmlFor={props?.taskId}>\n                                    <span className=\"label-text \">{item.description}</span>\n                                </label>\n                                <span className={item.status ? \"tag completed\" : \"tag pending\"}>{item.status ? \"pending\" : \"pending\"}</span>\n                            </div>\n                        ))\n                        :\n                        <div>{errMsg}</div>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default UpcomingTask\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}